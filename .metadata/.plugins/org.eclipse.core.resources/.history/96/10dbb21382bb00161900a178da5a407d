import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

import okhttp3.OkHttpClient;
import okhttp3.ResponseBody;
import okhttp3.logging.HttpLoggingInterceptor;
import retrofit2.Call;
import retrofit2.Response;
import retrofit2.Retrofit;
import retrofit2.converter.gson.GsonConverterFactory;
import retrofit2.http.Field;
import retrofit2.http.FormUrlEncoded;
import retrofit2.http.POST;

public class ClientUI {
	public void start(){
		HttpLoggingInterceptor interceptor = new HttpLoggingInterceptor();
		interceptor.setLevel(HttpLoggingInterceptor.Level.BODY);
		OkHttpClient client = new OkHttpClient.Builder().addInterceptor(interceptor).build();		
				
		
		Gson gson = new GsonBuilder().create();
		Retrofit retrofit = new Retrofit.Builder()
			.client(client)
			.baseUrl("http://localhost:9999/") // a legit base url is needed regardless
			.addConverterFactory(GsonConverterFactory.create(gson))
			.build();
	//service class
	
		ClientQuery query = retrofit.create(ClientQuery.class);

		Call<ResponseBody> call1 = query.register("fullName", "password", 
				"mobileNumber", "typeOfPassenger", 
				"emailAddress" , "barangay", 
				"city", "zipCode");
		Call<ResponseBody> call2 = query.reserveSeat("9213460000", "Nevada");
//		Call<ResponseBody> call3 = query.deleteTrip("Temple Drive to Ateneo (6:15 AM)");
		
		/**
		*IDK YET WHERE TO SHOW THE RESULTS OMG
		**/
		Response<ResponseBody> response1;
		Response<ResponseBody> response2;
		Response<ResponseBody> response3;
		String reply = "";
		try {
//			response1 = call1.execute();
//			System.out.println(response1.message());
			response2 = call2.execute();
			System.out.println(response2.message());
//			response3 = call3.execute();
//			System.out.println(response3.message());
			
//			reply = response.body().string();
//			reply = response.message();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
	
	public static void main(String args[]){
		ClientUI c = new ClientUI();
		c.start();
	}
	
	interface ClientQuery{
		
		@FormUrlEncoded
		@POST("client/register")
		Call<ResponseBody> register(@Field("fullName") String fullName, 
									@Field("password") String password, 
									@Field("mobileNumber")String mobileNumber, 
									@Field("typeOfPassenger") String typeOfPassenger, 
									@Field("emailAddress") String emailAddress, 
									@Field("barangay") String barangay, 
									@Field("city") String city, 
									@Field("zipCode") String zipCode);
		
		@FormUrlEncoded
		@POST("client/reserveSeat")
		Call<ResponseBody> reserveSeat(@Field("mobileNumber") String mobileNumber, 
									@Field("tripName") String tripName);
		
		@FormUrlEncoded
		@POST("client/cancelTrip")
		Call<ResponseBody> cancelTrip(@Field("mobileNumber") String mobileNumber, 
									@Field("tripName") String tripName);

		
		@FormUrlEncoded
		@POST("common/viewTrip")
		Call<ResponseBody> viewTripDetails(@Field("tripName") String tripName);
		
		@FormUrlEncoded
		@POST("common/updateMobileNumber")
		Call<ResponseBody> updateMobileNumber(@Field("oldMobileNumber") String oldMobileNumber,
				@Field("newMobileNumber") String newMobileNumber);
	}
}
